<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step_config">
    <sys_atf_step_config action="INSERT_OR_UPDATE">
        <active>true</active>
        <batch_order_constraint>middle</batch_order_constraint>
        <can_mutate_page>false</can_mutate_page>
        <category display_value="Service Catalog">1d786c87c3b6220076173b0ac3d3ae16</category>
        <class_name/>
        <class_type>script</class_type>
        <deprecated>false</deprecated>
        <description_generator><![CDATA[/* global step */
/* global x_424426_atf */
/* eslint no-undef: "error" */
(function generateDescription(step) {
	
	return new x_424426_atf.CatalogItemUtil().generateCollectionVariableStepDescription(step.inputs.variable_name, step.inputs.variable_value);
	
})(step);]]></description_generator>
        <html_description><![CDATA[<p>Set the value for a certain list collector field on the current Catalog Item or Record Producer page or a form containing variable editor</p>
<p><strong>Catalog Item</strong> - This step can be used to set the variables values in-between the “Open a Catalog Item” and “Order Catalog Item” step or can be used after opening a from (using the &#39;Open an Existing Record&#39; step) containing the variable editor.<br /><br /><strong>Record Producer</strong>  - This step can be used to set the variables values in-between the “Open a Record Producer” and “Submit Record Producer” step or can be used after opening the target record from (using the &#39;Open an Existing Record&#39; step) containing the variable editor.</p>
<p>This step is mainly used a replacement for the &#34;glide_list&#34; workaround suggested by <a href="https://support.servicenow.com/kb?id&#61;kb_article_view&amp;sysparm_article&#61;KB0713770" target="_blank" rel="noopener noreferrer nofollow">KB0713770➚</a>.</p>]]></html_description>
        <icon>icon-article-document</icon>
        <inputs/>
        <name>Set List Collector Variable Value (ATF+)</name>
        <order>4110</order>
        <outputs/>
        <step_env display_value="UI">d2cb02e1870312009dccc9ded0e3ec7c</step_env>
        <step_execution_generator><![CDATA[/* global step, stepResult, assertionObject */
/* global g_ui_testing_util, getMessage, GlideAjax */
/* eslint no-undef: "error" */
(function(step, stepResult, assertionObject) {
	
	// source of g_ui_testing_util:
	// /scripts/app.snTestRunner/util/GUITestingUtil.js
	
	// All ATF Scripts:
	// /scripts/js_includes_snTestRunner.js

	var messages = {
		'NO_G_FORM': 'FAILURE: Unable to set values, g_form is not defined. A valid form must be open before setting values',
		'SUCCESSFULLY_SET_TO': "Successfully set field '{0}' to value '{1}'",
		'FAILED_SET_TO': "FAILURE: Failed to set field '{0}' to value '{1}'.",
		'SKIP_SETTING': 'Skipping setting a value, no field or value was given',
		'INVALID_VARIABLE': 'FAILURE: Unable to set values, variable is not or incorrectly defined.',
	};
	
    assertionObject.executeStep = function(step, stepResult) {
		getMessage(Object.values(messages), function (translatedMessages) {
			Object.keys(messages).forEach(function (key) {
				messages[key] = translatedMessages[messages[key]];
			});
			
			var $window = g_ui_testing_util.getTestIFrameWindow();
			if (!$window || !$window.g_form) {
				onError(messages.NO_G_FORM);
			} else if (step.inputs.variable_name && step.inputs.variable_value) {
				var g_form = $window.g_form;
				var variableName = g_form.resolvePrettyNameMap('IO:' + step.inputs.variable_name);
				if (variableName) {
					var config = {
						$window: g_ui_testing_util.getTestIFrameWindow(),
						$timeout: g_ui_testing_util.timeout(),
						variable_name: variableName,
						variable_value: step.inputs.variable_value,
						timeout: step.inputs.timeout || 15,
					};
					
					processStep(config);
				} else {
					onError(messages.INVALID_VARIABLE);
				}
			} else {
				onSuccess(messages.SKIP_SETTING);
			}
		});
    };
	
    assertionObject.canMutatePage = step.can_mutate_page;
	
	function processStep(config) {
		config.$window[config.variable_name + 'g_filter'].reset();
		config.$window[config.variable_name + 'g_filter'].setQuery('sys_idIN' + config.variable_value);
		config.$window[config.variable_name + 'acRequest'](null);

		var $timeout = g_ui_testing_util.timeout();
		$timeout(function () {
			// wait until the list has loaded
			config.$window.g_form.setValue(config.variable_name, config.variable_value);

			$timeout(function () {
				// wait until the display value for the new value has loaded
				var values = config.$window.g_form.getValue(config.variable_name);
				if (values 
					&& config.variable_value.split(',')
					.map(function (v) { return v.trim(); })
					.every(function (v) { return values.indexOf(v) > -1; })) {
					onSuccess(messages.SUCCESSFULLY_SET_TO.withValues([config.variable_name, config.variable_value]));
				} else {
					onError(messages.FAILED_SET_TO.withValues([config.variable_name, config.variable_value]));
				}
			}, 2000);
		}, 5000);
	}
	
	function message(msg) {
		return g_ui_testing_util.setTestStepStatusMessage(msg);
	}
	
	function onError(msg) {
		message(msg);
		stepResult.message = msg;
		stepResult.success = false;
		step.defer.reject();
	}

	function onSuccess(msg) {
		message(msg);
		stepResult.message = msg;
		stepResult.success = true;
		step.defer.resolve();
	}
	
})(step, stepResult, assertionObject);]]></step_execution_generator>
        <sys_class_name>sys_atf_step_config</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-05-23 20:35:56</sys_created_on>
        <sys_id>0e0cdf6897032110d70ef207f053af12</sys_id>
        <sys_mod_count>34</sys_mod_count>
        <sys_name>Set List Collector Variable Value (ATF+)</sys_name>
        <sys_package display_value="ATF+" source="x_424426_atf">02dbdb2497032110d70ef207f053af3d</sys_package>
        <sys_policy/>
        <sys_scope display_value="ATF+">02dbdb2497032110d70ef207f053af3d</sys_scope>
        <sys_update_name>sys_atf_step_config_0e0cdf6897032110d70ef207f053af12</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-05-30 18:44:10</sys_updated_on>
        <template_reminder>Set List Collector Variable Value</template_reminder>
        <type display_value="Test Step" name="sys_atf_step">0dfc4fcec59021108c8b506e733c4c06</type>
        <wizard_redirect/>
    </sys_atf_step_config>
    <sys_translated_text action="delete_multiple" query="documentkey=0e0cdf6897032110d70ef207f053af12"/>
    <sys_variable_value action="delete_multiple" query="document_key=0e0cdf6897032110d70ef207f053af12"/>
    <sys_element_mapping action="delete_multiple" query="table=var__m_atf_input_variable_0e0cdf6897032110d70ef207f053af12^id=0e0cdf6897032110d70ef207f053af12"/>
</record_update>
